/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples
 */

plugins {
    // Implicitly applies Java plugin and Distribution plugin 
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
}

repositories {
    maven { 
        // The google mirror is less flaky than mavenCentral()
        url 'https://maven-central.storage-download.googleapis.com/maven2/'
    }
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.60.0'
def protobufVersion = '3.24.0'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

// Creates start scripts for a class name and adds it to the distribution. The
// base class name is used to name the task and scripts. For example, passed
// the class crypto.CryptoServer, it creates the task
// cryptoServer with script name crypto-server.
def createStartScripts(String mainClassName) {
    String bareName = mainClassName.substring(mainClassName.lastIndexOf('.') + 1);
    String taskName = bareName.uncapitalize();
    def newTask = tasks.register(taskName, CreateStartScripts) {
        mainClass = mainClassName
        applicationName = taskName.replaceAll('([A-Z])') { '-' + it[0].uncapitalize() }
        outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
        classpath = startScripts.classpath
    }
    application {
        applicationDistribution.into('bin') {
            from(newTask)
            fileMode = 0755
        }
    }
}

createStartScripts('crypto.CryptoServer')
createStartScripts('crypto.CryptoClient')
